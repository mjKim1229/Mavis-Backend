name: CI-CD

on:
  push:
    branches: [ "dev"]

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACTION_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew :Mavis-Api:clean build -x test

      - name: docker build and push to dev
        if: contains(github.ref, 'dev')
        run: |
          cd Mavis-Api
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/backend .
          docker push ${{ secrets.DOCKER_REPO }}/backend

      - name: Copy docker-compose.yml to EC2 DEV
        if: contains(github.ref, 'dev')
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY_DEV }}
          source: ./docker-compose.yml
          target: /home/ubuntu

      - name: Deploy to dev
        if: contains(github.ref, 'dev')
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY_DEV }}
          script: |
            cd /home/ubuntu
            sudo docker rm -f $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/backend
            sudo docker-compose -f docker-compose.yml up -d
            sudo docker image prune -f